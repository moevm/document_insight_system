services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: document_insight_system_image
    restart: always
    ports:
      - "${WEB_PORT:-8080}:8080"
    depends_on:
      - mongodb
      - redis
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONIOENCODING=UTF-8
      - CELERY_BROKER_URL=${REDIS_URL}
      - CELERY_RESULT_BACKEND=${REDIS_URL}
    volumes:
      - files:/usr/src/project/files/
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    cpuset: ${CONTAINER_CPU:-0-1}

  worker:
    image: document_insight_system_image
    restart: always
    command: celery --app=app.tasks.celery worker -n celery@worker --beat -Q ${CELERY_QUERIES} --loglevel=info
    environment:
      - CELERY_BROKER_URL=${REDIS_URL}
      - CELERY_RESULT_BACKEND=${REDIS_URL}
    depends_on:
      - redis
      - mongodb
    volumes:
      - files:/usr/src/project/files/
      - language_tool_cache:/root/.cache/language_tool_python/
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    cpuset: ${CONTAINER_CPU:-0-1}
    mem_limit: ${WORKER_MEMORY:-1G}

  worker-dashboard:
    image: document_insight_system_image
    command: celery --broker=${REDIS_URL} flower --port=${FLOWER_PORT} --url_prefix=${FLOWER_PREFIX} --basic_auth=${FLOWER_AUTH} --persistent=True
    ports:
      - "${FLOWER_PORT}:5555"
    environment:
      - SECRET_KEY=${FLOWER_SECRET_KEY}
      - CELERY_BROKER=${REDIS_URL}
      - CELERY_BACKEND=${REDIS_URL}
    volumes:
      - flower_data:/etc/db/
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    depends_on:
      - worker
      - redis
    cpuset: ${CONTAINER_CPU:-0-1}

  redis:
    image: redis:6-alpine
    restart: always
    volumes:
      - redis_data:/data
    cpuset: ${CONTAINER_CPU:-0-1}

  mongodb:
    image: mongo:7.0
    restart: always
    command:
      - '--wiredTigerCacheSizeGB=${MONGODB_CACHE_SIZE:-1}'
    volumes:
      - ../dis_mongo_data:/data/db
    cpuset: ${CONTAINER_CPU:-0-1}

  templater:
    env_file:
      - .env
    build:
      context: ./templater
      dockerfile: Dockerfile
    command: python3 -u runapp.py
    ports:
      - "8092:5000"
    links:
      - db
    volumes:
      - ./templater/app:/app
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  db:
    image: mongo:3.6
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

volumes:
  flower_data:
  language_tool_cache:
  files:
  redis_data: