{% extends "layout.jinja2" %}

{% block title %}Список шаблонов{% endblock %}

{% block content %}
<link href="{{request.static_url('templater:static/css/styles.css')}}" rel="stylesheet" />
<div class="templates-title">
    <h1>Список шаблонов</h1>
</div>

<div class="templates-container">
    {% for template in templates %}
    <div class="template-card" data-template-id="{{ template.id }}">
        <h3>
            {{ template.name }}
            <span class="data-status" style="margin-left: 10px; font-weight: normal; font-size: 0.9em; color: grey;">
                Загрузка...
            </span>
        </h3>
        <p><strong>Тип:</strong> {{ template.type }}</p>
        <p><strong>Описание:</strong> {{ template.description }}</p>
        <p><small>{{ template.created_at }}</small></p>

        <div class="template-card-actions">
            <button class="btn btn-edit" onclick="editTemplate('{{ template.id }}')">Редактировать</button>
            <button class="btn btn-delete" onclick="deleteTemplate('{{ template.id }}')">Удалить</button>
            <button class="btn btn-export" onclick="exportTemplate('{{ template.id }}')">Export</button>
            <button class="btn btn-input-data" onclick="inputData('{{ template.id }}')">Ввести данные</button>
        </div>
    </div>
    {% endfor %}
</div>

<script>
    function editTemplate(templateId) {
        window.location.href = `/edit_template/${templateId}`;
    }

    async function deleteTemplate(templateId) {
        if (confirm("Вы уверены, что хотите удалить этот шаблон?")) {
            const response = await fetch(`/delete_template/${templateId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
            });

            if (response.ok) {
                window.location.reload();
            } else {
                alert("Ошибка при удалении шаблона");
            }
        }
    }

    async function exportTemplate(templateId) {
        try {
            const authRes = await fetch('/start_auth');
            const authData = await authRes.json();

            if (!authData.auth_url) {
                alert("Ошибка получения ссылки авторизации");
                return;
            }

            const authWindow = window.open(authData.auth_url, "_blank");
            await new Promise(resolve => setTimeout(resolve, 10000));

            const folderId = prompt("Введите ID папки Google Drive (оставьте пустым для корневой)");

            const exportRes = await fetch(`/export_template/${templateId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ folder_id: folderId || null })
            });

            const result = await exportRes.json();

            if (exportRes.ok) {
                alert(result.message);
            } else {
                alert("Ошибка при экспорте: " + result.error);
            }
        } catch (error) {
            alert("Ошибка при выполнении запроса: " + error.message);
        }
    }

    function inputData(templateId) {
        window.location.href = `/input_template_data/${templateId}`;
    }

    document.addEventListener('DOMContentLoaded', () => {
        const cards = document.querySelectorAll('.template-card');
        cards.forEach(card => {
            const templateId = card.getAttribute('data-template-id');

            fetch(`/api/get_template_data_status/${templateId}`)
                .then(res => res.json())
                .then(data => {
                    const statusElem = card.querySelector('.data-status');
                    if (data.has_data) {
                        statusElem.textContent = 'Данные введены';
                        statusElem.style.color = 'green';
                    } else {
                        statusElem.textContent = 'Данные отсутствуют';
                        statusElem.style.color = 'red';
                    }
                })
                .catch(() => {
                    // Если ошибка, оставляем "Загрузка..."
                });
        });
    });
</script>
{% endblock %}
